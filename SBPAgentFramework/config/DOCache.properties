#
# This property file allows to customise some of the behaviour of the Dependent Object Cache.
#

#---------------------------------------------------------
#-- Properties relating to the expiry of cached objects --
#---------------------------------------------------------

# The default strategy to use for expired objects. Valid values are:
# EXPIRE: Objects will be removed from Cache
# REQUEST: Objects will be requested again
# Default: EXPIRE 
cache.expiry.strategy.default=EXPIRE

# The amount of time, in minutes, that a object shall be kept in the cache before an expiry strategy is applied
# See also cache.expiry.strategy.default.
# Default 120 minutes (2 hours)
cache.expiry.minutes.default=90

#
# -- This part allows to overwrite the default strategy and minutes for a given SIF Object type. The example below
# -- indicates that the StudentSchoolEnrollment object shall be requested again after 60 minutes if it has not been
# -- received in that time.
cache.expiry.strategy.StudentSchoolEnrollment=REQUEST
cache.expiry.minutes.StudentSchoolEnrollment=60

# ---------------------------------------------------------------------------------------------------------------
# -- The following properties are set at agent level only and cannot be customised for a particular subscriber
# ----------------------------------------------------------------------------------------------------------------

# How frequently should be checked if there are expired cached objects. Value is in minutes. Default = 60 (one hour) 
cache.expiry.check.frequency.minutes=120

# Sometimes there is a reason not to check for expired objects at startup time of the agent. This property allows
# to delay the first check of expired objects for a given number of seconds. Default: 60 (one minute)
cache.expiry.startup.delay.seconds=30

#---------------------------------------------------------------------------------------------
#-- Properties relating to requesting dependent objects and cleaning up of received objects --
#---------------------------------------------------------------------------------------------

# This property indicates the frequency the subscribers will request dependent objects for which no request has been
# sent, yet. The frequency is given in seconds. 
# Default: 60 seconds (request every minute)
cache.request.frequency.seconds=60

# The delay after the subscriber startup before a check for not requested object is performed for the first 
# time. See also property cache.request.frequency.seconds. 
# Default: 60 (one minute delay after subscriber startup)
cache.request.startup.delay.seconds=30

# This property indicates the frequency the subscribers will check the cache for objects that have no remaining 
# dependencies and therefore can be processed and removed from the DOC. The frequency is given in seconds. 
# Default: 60 seconds (request every minute)
cache.resolved.frequency.seconds=60

# The delay after the subscriber startup before a check for objects with resolved dependencies is performed
# for the first time. See also property cache.resolved.frequency.seconds. 
# Default: 60 (one minute delay after subscriber startup)
cache.resolved.startup.delay.seconds=60

#--------------------------------------------------------------------------------------------------------------------
#-- Properties that can be used to remove configured dependencies between objects. By default the metadata cache has
#-- All dependencies between objects defined. There is the possibility that a particular agent doesn't care about
#-- some of the dependencies and wants to process objects regardless of existing dependencies as defined by the SIF
#-- Spec. This section allows to turn of object dependencies. This is done by a <ParentObjectName>.<ChildObjectName>
#-- notations. The example below turns off the dependency between TeachingGroup and StaffPersonal.
#--------------------------------------------------------------------------------------------------------------------
#cache.ignore.TeachingGroup.StaffPersonal=true
#cache.ignore.StudentContactRelationship.StudentContactPersonal=true


